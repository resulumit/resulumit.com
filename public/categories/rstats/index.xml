<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rstats on Resul Umit</title>
    <link>/categories/rstats/</link>
    <description>Recent content in rstats on Resul Umit</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 30 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/rstats/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Writing reproducible research papers with R Markdown</title>
      <link>/blog/rmd-workshop/</link>
      <pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/rmd-workshop/</guid>
      <description>My writing workflow has been based on R Markdown for some time. In March 2020, I organised a full-day workshop at Campus Luzern, to share my experience with researchers from the three universities in the Swiss Canton of Lucerne. It went very well.
Since then I have revised the workshop material, which you can find at GitHub. The slides are better viewed here at my website.
I would be happy if other instructors used my material for teaching.</description>
    </item>
    
    <item>
      <title>Google Scholar ranking of political science journals</title>
      <link>/blog/polisci-google-scholar/</link>
      <pubDate>Wed, 23 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/polisci-google-scholar/</guid>
      <description>Here is a list of all political science journals in the Social Science Citations Index (SSCI),1 ranked according to their h5-index on Google Scholar.
Google Scholar provides a similar list of top journals in political science, but this includes only the top 20 journals. I was wondering how the list looked below this number.
To see that, I have scraped Google Scholar for the journals in SSCI, with the rvest package in R.</description>
    </item>
    
    <item>
      <title>Calculating standard deviations for survey subgroups in R</title>
      <link>/blog/sds-survey-subgroups/</link>
      <pubDate>Mon, 10 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/sds-survey-subgroups/</guid>
      <description>The survey package is one of my favourites in R.
Among its many other uses, it can compute summary statistics by subgroups. For example, if you have a survey of individuals from several countries with an item on the respondents’ income, you can calculate the average income in each subgroup with the svyby() function.
However, like many other functions in the package, svyby() returns standard errors—but not standard deviations—of the mean values.</description>
    </item>
    
  </channel>
</rss>